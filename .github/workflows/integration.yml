name: Full Stack Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    
    # Uncomment and configure services as needed
    # services:
    #   redis:
    #     image: redis:alpine
    #     ports:
    #       - 6379:6379

    steps:
    - uses: actions/checkout@v4

    # Setup Backend
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start backend server
      working-directory: ./backend
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10  # Wait for server to start
      env:
        PYTHONPATH: ${{ github.workspace }}/backend

    # Setup Frontend
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    # Integration Tests
    - name: Test backend health
      run: |
        curl -f http://localhost:8000/docs || exit 1
        echo "Backend is responding"

    - name: Run integration tests
      working-directory: ./frontend
      run: |
        # Add your integration test commands here
        echo "Integration tests would run here"
        # npm run test:integration
      continue-on-error: true

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [integration-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deployment to staging would happen here"
        # Add your deployment steps here
        # This could include deploying to Vercel, AWS, Docker, etc.
