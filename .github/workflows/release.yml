name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation - you can enhance this
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## Changes in this release:" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        release_name: Release ${{ github.ref_name || github.event.inputs.version }}
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          ### Frontend
          ```bash
          cd frontend
          npm install
          npm run build
          npm start
          ```
          
          ### Backend  
          ```bash
          cd backend
          pip install -r requirements.txt
          uvicorn app.main:app --reload
          ```
        draft: false
        prerelease: false

  build-frontend:
    runs-on: ubuntu-latest
    needs: create-release
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Create frontend archive
      run: |
        cd ..
        tar -czf frontend-build.tar.gz frontend/.next frontend/public frontend/package.json

    - name: Upload frontend build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./frontend-build.tar.gz
        asset_name: frontend-build.tar.gz
        asset_content_type: application/gzip

  build-backend:
    runs-on: ubuntu-latest
    needs: create-release
    
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Create backend archive
      run: |
        cd ..
        tar -czf backend-app.tar.gz backend/

    - name: Upload backend build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./backend-app.tar.gz
        asset_name: backend-app.tar.gz
        asset_content_type: application/gzip

  docker-build:
    runs-on: ubuntu-latest
    needs: create-release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Uncomment and configure if you want to push to Docker Hub
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: vibesync
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    # Uncomment when you have Dockerfiles
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     platforms: linux/amd64,linux/arm64
    #     push: false  # Set to true when ready to push
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
